import org.junit.Before;
import org.junit.Test;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

import static org.junit.Assert.*;

/**
 * Created by jonesdc on 6/28/16.
 */
public class GameOfLifeTest
{
    GameOfLife gameOfLife;
    ArrayList<List<Integer>> originalList = new ArrayList<>();
    ArrayList<Integer> sub = new ArrayList<>();

    //Pick coordinates here
    int firstCoor = 0;
    int secondCoor = 1;

    @Before
    public void setUp()
    {
        gameOfLife = new GameOfLife();
        Random rand = new Random();

        for(int i = 0; i < 6; i++)  //rows
        {
            for(int j = 0; j < 8; j++)  //columns
            {
                int n = rand.nextInt(Integer.MAX_VALUE); //positive numbers only
                if((n & 1) == 0) //bitwise operator to set n to 1 or 0
                {
                    n = 1;
                }
                else
                {
                    n = 0;
                }
                System.out.print(n + " ");
                sub.add(n);
            }
            originalList.add(sub);
            System.out.print("\n");
        }
        System.out.print("\n");
    }


    //if count is equal to zero or one the cell dies
    //any live cell with more than three live neighbors dies, as if by overcrowding
    //any live cell with two or three live neighbors lives on to the next generation
    //any dead cell with exactly three live neighbors becomes a live cell
    //a cells neighbor are those which are horozontally, vertically or diagonally adjacent

    @Test
    public void ifCountIsEqualToZeroOrOneTheCellDies() {
        int tempVar = originalList.get(firstCoor).get(secondCoor);
        ArrayList<ArrayList<Integer>> newList = new ArrayList<>(gameOfLife.addNeighborCells(originalList));
        int tempVar2 = newList.get(secondCoor).get(firstCoor);
        int tempVar3 = gameOfLife.getNeighborCells(firstCoor, secondCoor, originalList);

        System.out.print(tempVar);
        System.out.print(tempVar2);
        System.out.print(tempVar3);
        if(tempVar3 < 2 && tempVar == 0)
        {
            assertEquals(tempVar, tempVar2);
        }
        else
            assertEquals(tempVar, tempVar2);
    }


}
